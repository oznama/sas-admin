## Catalogos
query.catalog.email=select value from catalog where catalog_parent_id = 1000000011

## Count
query.count = select count(*) from ( :subquery )

### Limit and Offset
query.condition.limit = limit :size offset :page

### General Filter
query.project.general.filter=lower(p.p_key) like :filter or lower(f_unaccent(pa.app_name)) like :filter
query.project.installed.isnull = p.installation_date is null
query.project.monitoring.isnull = p.monitoring_date is null
query.project.application.startdate.expired=pa.start_date < now() 
query.project.order.status.canceled = o.status = 2000600003
query.project.order.status.not.canceled = o.status != 2000600003
query.project.application.invoice.developed = pa.development_date < now()
query.project.invoice.installed = p.installation_date < now()
query.project.invoice.monitoring = p.monitoring_date < now()
query.project.application.status=pa.design_status = :paStatus or pa.development_status = :paStatus
query.project.pkeys.list.in=p.p_key in (:pKeys)

### General Order
query.project.order.general=order by p.p_key
query.project.order.union=order by project_key

### Proyectos sin ordenes
query.project.without.orders=select p.p_key as project_key, p.description as project_name \
, p.installation_date as installation, p.monitoring_date as monitoring \
, e3.email as pm_mail, concat(e3.name || ' ' || e3.second_name || ' ' || e3.last_name || ' ' || e3.second_surname) as pm_name \
, e4.email as boss_mail, concat(e4.name || ' ' || e4.second_name || ' ' || e4.last_name || ' ' || e4.second_surname) as boss_name \
, count(o.order_num) as num_orders \
, cast(sum(pa.amount) as money ) as project_amount \
, cast(sum(pa.tax) as money ) as tax \
, cast(sum(pa.amount + pa.tax) as money ) as total \
from projects p \
inner join project_applications pa on pa.p_key  = p.p_key \
inner join employees e3 on e3.id = p.project_manager_id \
left outer join employees e4 on e4.id = e3.boss_id \
left outer join orders o on o.p_key  = p.p_key  \
:where_clause \
group by p.p_key, p.description \
, p.installation_date, p.monitoring_date \
, e3.email, e3.name, e3.second_name, e3.last_name, e3.second_surname \
, e4.email, e4.name, e4.second_name, e4.last_name, e4.second_surname \
having count(o.order_num) = 0

### Proyecto con orden, desarrollo completado sin factura
query.project.without.invoice=select p.p_key as project_key, p.description as project_name \
, e3.email as pm_mail, concat(e3.name || ' ' || e3.second_name || ' ' || e3.last_name || ' ' || e3.second_surname) as pm_name \
, e4.email as boss_mail, concat(e4.name || ' ' || e4.second_name || ' ' || e4.last_name || ' ' || e4.second_surname) as boss_name \
, count(i.invoice_num) as num_invoices \
, cast(sum(pa.amount) as money ) as project_amount \
, cast(sum(pa.tax) as money ) as tax \
, cast(sum(pa.amount + pa.tax) as money ) as total \
, :percent as percentage \
from projects p \
inner join project_applications pa on pa.p_key  = p.p_key \
inner join employees e3 on e3.id = p.project_manager_id \
left outer join employees e4 on e4.id = e3.boss_id \
inner join orders o on o.p_key  = p.p_key \
left outer join invoices i on i.order_num = o.order_num \
:where_clause \
group by p.p_key, p.description \
, e3.email, e3.name, e3.second_name, e3.last_name, e3.second_surname \
, e4.email, e4.name, e4.second_name, e4.last_name, e4.second_surname \
having round(sum(i.amount)*100/sum(pa.amount)::numeric, 2) < :percent

##Proyecto sin fechas
query.project.with.applications=select p.p_key as project_key, p.description as project_name \
, p.installation_date as installation, p.monitoring_date as monitoring \
, e3.email as pm_mail, concat(e3.name || ' ' || e3.second_name || ' ' || e3.last_name || ' ' || e3.second_surname) as pm_name \
, e4.email as boss_mail, concat(e4.name || ' ' || e4.second_name || ' ' || e4.last_name || ' ' || e4.second_surname) as boss_name \
, null as num_orders \
, cast(sum(pa.amount) as money ) as project_amount \
, cast(sum(pa.tax) as money ) as tax \
, cast(sum(pa.amount + pa.tax) as money ) as total \
from projects p \
inner join project_applications pa on pa.p_key  = p.p_key \
inner join employees e3 on e3.id = p.project_manager_id \
left outer join employees e4 on e4.id = e3.boss_id \
:where_clause \
group by p.p_key, p.description \
, p.installation_date, p.monitoring_date \
, e3.email, e3.name, e3.second_name, e3.last_name, e3.second_surname \
, e4.email, e4.name, e4.second_name, e4.last_name, e4.second_surname