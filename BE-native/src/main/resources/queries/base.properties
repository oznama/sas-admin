## Count
query.count = select count(*) from ( :subquery )

### Limit and Offset
query.condition.limit = limit :size offset :page

### Proyectos sin ordenes

query.project.without.orders=select p.p_key as project_key, p.description as project_name \
, e3.email as pm_mail, concat(e3.name || ' ' || e3.second_name || ' ' || e3.last_name || ' ' || e3.second_surname) as pm_name \
, e4.email as boss_mail, concat(e4.name || ' ' || e4.second_name || ' ' || e4.last_name || ' ' || e4.second_surname) as boss_name \
, count(o.order_num) as num_orders, cast(sum(pa.amount) as money ) as project_amount \
from projects p \
inner join project_applications pa on pa.p_key  = p.p_key \
inner join employees e3 on e3.id = p.project_manager_id \
left outer join employees e4 on e4.id = e3.boss_id \
left outer join orders o on o.p_key  = p.p_key  \
:where_clause \
group by p.p_key, p.description \
, e3.email, e3.name, e3.second_name, e3.last_name, e3.second_surname \
, e4.email, e4.name, e4.second_name, e4.last_name, e4.second_surname \
having count(o.order_num) = 0 \
order by p.p_key

query.project.without.orders.where00=pa.start_date < now() 
query.project.without.orders.where01=lower(p.p_key) like :filter or lower(f_unaccent(pa.app_name)) like :filter
query.project.without.orders.where02=pa.design_status = :paStatus or pa.development_status = :paStatus
query.project.without.orders.where03=p.p_key in (:pKeys)